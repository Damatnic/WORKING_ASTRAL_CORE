{
  "permissions": {
    "allow": [
      "Bash(npm run lint)",
      "Bash(npx tsc:*)",
      "Bash(npm install:*)",
      "Bash(find:*)",
      "Bash(npm run build:*)",
      "Bash(npx next build:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git config:*)",
      "Bash(git commit:*)",
      "Bash(gh repo create:*)",
      "Bash(git remote add:*)",
      "Bash(git push:*)",
      "Bash(openssl rand:*)",
      "Bash(npm uninstall:*)",
      "Bash(git rm:*)",
      "Bash(vercel:*)",
      "Bash(sed:*)",
      "Bash(npm run typecheck:*)",
      "Bash(npm run deploy:check:*)",
      "Bash(timeout 10 npm run dev)",
      "Bash(git reset:*)",
      "Bash(npx vercel:*)",
      "Bash(node:*)",
      "Bash(set NODE_OPTIONS=--max-old-space-size=4096)",
      "Bash(npm run vercel:validate:*)",
      "Bash(git check-ignore:*)",
      "Bash(npm run lint:*)",
      "Bash(npm run deploy:verify:*)",
      "Bash(npm ci:*)",
      "Read(//h/Astral Core/**)",
      "Bash(npx prisma:*)",
      "Bash(dir prisma)",
      "Bash(dir \"C:\\Users\\%USERNAME%\\AppData\\Roaming\\npm\\node_modules\\.bin\")",
      "Bash(dir:*)",
      "Bash(npm cache clean:*)",
      "Bash(del nul)",
      "Bash(timeout 30 npm run typecheck)",
      "WebSearch",
      "Bash(git remote set-url:*)",
      "Bash(chmod:*)",
      "Bash(npm run setup:*)",
      "Bash(npm run:*)",
      "mcp__ide__getDiagnostics",
      "Read(//h//**)",
      "Bash(mkdir:*)",
      "Bash(npm ls:*)",
      "Bash(test:*)",
      "Bash(for file in \"src/app/api/crisis/stats/route.ts\" \"src/app/api/therapist/clients/[clientId]/route.ts\" \"src/app/api/therapist/clients/route.ts\" \"src/app/api/therapist/session-notes/route.ts\" \"src/app/api/therapist/sessions/route.ts\")",
      "Bash(do sed -i \"/import { Session } from ''next-auth'';/a import { authOptions } from ''@/lib/auth-simple'';\" \"$file\")",
      "Bash(done)",
      "Bash(for dir in prisma/migrations/*/)",
      "Bash(do if [ -f \"$dir/sql\" ])",
      "Bash(then mv \"$dir/sql\" \"$dir/migration.sql\")",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(timeout 120 npm run build)",
      "Bash(timeout 60 npx prisma generate)",
      "Bash(timeout 90 npx next build)",
      "Bash(timeout 60 npx next build)",
      "Bash(powershell:*)",
      "Bash(grep:*)",
      "Bash(yarn install)",
      "Bash(yarn add:*)",
      "Read(//c/Users/damat/AppData/Local/npm-cache/_logs/**)",
      "Bash(rm:*)",
      "Bash(cmd /c \"rmdir /s /q node_modules\")",
      "Bash(robocopy:*)",
      "Bash(cat:*)",
      "Bash(npx playwright test:*)",
      "Read(//c/Astral Projects/Astral-Projects/_Repos/C/**)",
      "Bash(fsutil reparsepoint query:*)",
      "Bash(git -C \"H:\\Astral Core\\NEW CORE\\AstralCoreV5-Clean\" checkout -- prisma/schema.prisma)",
      "Bash(timeout 30s npx tsc --noEmit)",
      "Bash(npx madge:*)",
      "Bash(timeout 10s npm run dev)",
      "Bash(npm audit:*)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then sed -i '1s/^\\/\\/ @ts-nocheck$//' \"$file\")",
      "Bash(do sed -i 's/\\/\\/ @ts-ignore/\\/\\/ @ts-expect-error/g' \"$file\")",
      "Bash(do sed -i '/^\\/\\/ @ts-expect-error.*$/d' \"$file\")",
      "Bash(tail:*)",
      "Bash(python:*)",
      "Bash(timeout 180 npm run build)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(cmd /c \"dir src\\app\\about\\page.tsx\")",
      "Bash(attrib:*)",
      "Bash(timeout 30 npm run build)",
      "Bash(taskkill:*)",
      "Bash(git remote remove:*)",
      "WebFetch(domain:working-astral-core-q51mhjqur-astral-productions.vercel.app)",
      "Bash(timeout 30 curl -I https://working-astral-core.vercel.app)"
    ],
    "deny": [],
    "ask": []
  }
}